<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:ui="com.swfwire.inspector.flex.ui.*"
		   width="100%" height="100%"
		   currentState="details">
	<mx:states>
		<mx:State name="details">
			<mx:RemoveChild target="{hex}"/>
			<mx:RemoveChild target="{actionScript}"/>
			<mx:RemoveChild target="{preview}"/>
			<mx:SetProperty target="{detailLabel}" name="selected" value="true"/>
		</mx:State>
		<mx:State name="hex">
			<mx:RemoveChild target="{detail}"/>
			<mx:RemoveChild target="{actionScript}"/>
			<mx:RemoveChild target="{preview}"/>
			<mx:SetProperty target="{hexLabel}" name="selected" value="true"/>
		</mx:State>
		<mx:State name="actionScript">
			<mx:RemoveChild target="{hex}"/>
			<mx:RemoveChild target="{detail}"/>
			<mx:RemoveChild target="{preview}"/>
			<mx:SetProperty target="{actionScriptLabel}" name="selected" value="true"/>
		</mx:State>
		<mx:State name="preview">
			<mx:RemoveChild target="{hex}"/>
			<mx:RemoveChild target="{detail}"/>
			<mx:RemoveChild target="{actionScript}"/>
			<mx:SetProperty target="{previewLabel}" name="selected" value="true"/>
		</mx:State>
	</mx:states>
	<mx:Script>
		<![CDATA[
			import com.swfwire.utils.ArrayUtil;
			
			import mx.controls.dataGridClasses.DataGridItemRenderer;
			import mx.events.FlexEvent;
			
			[Bindable]
			public var isABC:Boolean = true;
			[Bindable]
			public var isPreviewable:Boolean = true;
			[Bindable]
			public var classesCount:uint;
			[Bindable]
			public var methodsCount:uint;
			
			//实现各种动作
			//onActon(key:String, data:object);
			[Bindable]
			public var onActon:Function;
			
			public function sortOnSize(a:*, b:*):int
			{
				var nA:Number = a.size;
				var nB:Number = b.size;
				
				if(isNaN(nA) && isNaN(nB))
				{
					return 0;
				}
				if(isNaN(nA))
				{
					return -1;
				}
				if(isNaN(nB))
				{
					return 1;
				}
				return nA - nB;
			}
			
			protected var curSelectItem:DataGridItemRenderer;
			protected function tagList_contextMenuHandler(event:MouseEvent):void
			{
				var menu:NativeMenu = this.tagList.contextMenu;
				menu.removeAllItems();
				
				var selectItem:DataGridItemRenderer = event.target as DataGridItemRenderer;
				this.curSelectItem = selectItem;
				if(selectItem == null)return;
				
				var data:Object = selectItem.data;
				if(data == null)return;
				
				switch(data.name){
					case "DefineBinaryDataTag":
						this.autoAddMenuItem("SaveByte");
						break;
				}
				
			}
			
			
			
			protected var menuItemMap:Dictionary;
			protected function tagList_creationCompleteHandler(event:FlexEvent):void
			{
				this.tagList.contextMenu = new NativeMenu();
				this.menuItemMap = new Dictionary();
				var local:SWFPanel = this;
				
				//增加保存数据功能
				this.makeMenuItem("SaveByte","Save Binary");
			}
			
			
			
			private function makeMenuItem(key:String, name:String):void
			{
				if(this.menuItemMap[key])return;
				
				var item:NativeMenuItem = new NativeMenuItem(name);
				item.data = key;
				item.addEventListener(Event.SELECT, this.menuItemSelectHandler);
				this.menuItemMap[key] = item
			}
			
			
			private function menuItemSelectHandler(e:Event):void{
				
				var item:NativeMenuItem = e.currentTarget as NativeMenuItem
				var selectItem:DataGridItemRenderer = this.curSelectItem;
				if(selectItem == null)return;
				
				if(this.onActon is Function) this.onActon(item.data,selectItem.data);
			}
			
			
			private function autoAddMenuItem(key:String):Boolean{
				
				var menuItem:NativeMenuItem = this.menuItemMap[key] as NativeMenuItem;
				if(menuItem == null)return false;
				
				this.tagList.contextMenu.addItem(menuItem);
				return true;
			}
		]]>
	</mx:Script>
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox width="300" height="100%">
			<mx:DataGrid id="tagList" width="100%" height="100%" contextMenu="tagList_contextMenuHandler(event)" creationComplete="tagList_creationCompleteHandler(event)">
				<mx:columns>
					<mx:DataGridColumn headerText="ID" dataField="displayId" sortCompareFunction="{ArrayUtil.getSortNumeric('id')}" width="34"/>
					<mx:DataGridColumn headerText="Type" dataField="name"/>
					<mx:DataGridColumn headerText="Bytes" dataField="size" sortCompareFunction="{ArrayUtil.getSortNumeric('size')}" width="62"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
		<mx:VBox width="100%" height="100%">
			<mx:HBox width="100%">
				<mx:Button id="detailLabel" label="Raw Data Structure" click="currentState = 'details'"/>
				<mx:Button id="hexLabel" label="Source Hex" click="currentState = 'hex'"/>
				<mx:Button id="actionScriptLabel" visible="{isABC}" includeInLayout="{isABC}" label="ActionScript" click="currentState = 'actionScript'"/>
				<mx:Button id="previewLabel" visible="{isPreviewable}" includeInLayout="{isPreviewable}" label="Preview" click="currentState = 'preview'"/>
			</mx:HBox>
			<mx:HDividedBox width="100%" height="100%">
				<mx:TextArea id="detail" width="100%" height="100%" editable="false" wordWrap="false" fontFamily="Courier New" fontSize="12"/>
				<mx:TextArea id="hex" width="100%" height="100%" editable="false" wordWrap="false" fontFamily="Courier New" fontSize="12"/>
				<ui:ActionScriptPanel id="actionScript" width="100%" height="100%"/>
				<ui:PreviewPanel id="preview" width="100%" height="100%"/>
			</mx:HDividedBox>
		</mx:VBox>
	</mx:HDividedBox>
</mx:Canvas>
